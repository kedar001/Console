//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestConsole.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="File_Data", Namespace="http://schemas.datacontract.org/2004/07/eDocsDN_Get_Directory_Info")]
    [System.SerializableAttribute()]
    public partial class File_Data : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Convert_To_PDFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ConvertedPDF_DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Destination_DirectoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Destination_File_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Draft_VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string File_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestConsole.ServiceReference1.File_Operations File_OperationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Need_File_BlobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrintFormDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Referance_Source_DirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Referance_Source_FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Referance_Source_LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Referance_Source_SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Referance_Source_SurrKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Remove_Scan_SignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Serial_NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceFilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Source_DirectoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Source_File_CheckSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SurrKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackChangesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Type_of_UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string User_IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckSum {
            get {
                return this.CheckSumField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckSumField, value) != true)) {
                    this.CheckSumField = value;
                    this.RaisePropertyChanged("CheckSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Convert_To_PDF {
            get {
                return this.Convert_To_PDFField;
            }
            set {
                if ((this.Convert_To_PDFField.Equals(value) != true)) {
                    this.Convert_To_PDFField = value;
                    this.RaisePropertyChanged("Convert_To_PDF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ConvertedPDF_Data {
            get {
                return this.ConvertedPDF_DataField;
            }
            set {
                if ((object.ReferenceEquals(this.ConvertedPDF_DataField, value) != true)) {
                    this.ConvertedPDF_DataField = value;
                    this.RaisePropertyChanged("ConvertedPDF_Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination_Directory {
            get {
                return this.Destination_DirectoryField;
            }
            set {
                if ((object.ReferenceEquals(this.Destination_DirectoryField, value) != true)) {
                    this.Destination_DirectoryField = value;
                    this.RaisePropertyChanged("Destination_Directory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination_File_Name {
            get {
                return this.Destination_File_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Destination_File_NameField, value) != true)) {
                    this.Destination_File_NameField = value;
                    this.RaisePropertyChanged("Destination_File_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Directory {
            get {
                return this.DirectoryField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectoryField, value) != true)) {
                    this.DirectoryField = value;
                    this.RaisePropertyChanged("Directory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Draft_Version {
            get {
                return this.Draft_VersionField;
            }
            set {
                if ((this.Draft_VersionField.Equals(value) != true)) {
                    this.Draft_VersionField = value;
                    this.RaisePropertyChanged("Draft_Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string File_Name {
            get {
                return this.File_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.File_NameField, value) != true)) {
                    this.File_NameField = value;
                    this.RaisePropertyChanged("File_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestConsole.ServiceReference1.File_Operations File_Operations {
            get {
                return this.File_OperationsField;
            }
            set {
                if ((object.ReferenceEquals(this.File_OperationsField, value) != true)) {
                    this.File_OperationsField = value;
                    this.RaisePropertyChanged("File_Operations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Need_File_Blob {
            get {
                return this.Need_File_BlobField;
            }
            set {
                if ((this.Need_File_BlobField.Equals(value) != true)) {
                    this.Need_File_BlobField = value;
                    this.RaisePropertyChanged("Need_File_Blob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrintFormData {
            get {
                return this.PrintFormDataField;
            }
            set {
                if ((this.PrintFormDataField.Equals(value) != true)) {
                    this.PrintFormDataField = value;
                    this.RaisePropertyChanged("PrintFormData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Referance_Source_Dir {
            get {
                return this.Referance_Source_DirField;
            }
            set {
                if ((object.ReferenceEquals(this.Referance_Source_DirField, value) != true)) {
                    this.Referance_Source_DirField = value;
                    this.RaisePropertyChanged("Referance_Source_Dir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Referance_Source_FileName {
            get {
                return this.Referance_Source_FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.Referance_Source_FileNameField, value) != true)) {
                    this.Referance_Source_FileNameField = value;
                    this.RaisePropertyChanged("Referance_Source_FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Referance_Source_Location {
            get {
                return this.Referance_Source_LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.Referance_Source_LocationField, value) != true)) {
                    this.Referance_Source_LocationField = value;
                    this.RaisePropertyChanged("Referance_Source_Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Referance_Source_SerialNumber {
            get {
                return this.Referance_Source_SerialNumberField;
            }
            set {
                if ((this.Referance_Source_SerialNumberField.Equals(value) != true)) {
                    this.Referance_Source_SerialNumberField = value;
                    this.RaisePropertyChanged("Referance_Source_SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Referance_Source_SurrKey {
            get {
                return this.Referance_Source_SurrKeyField;
            }
            set {
                if ((this.Referance_Source_SurrKeyField.Equals(value) != true)) {
                    this.Referance_Source_SurrKeyField = value;
                    this.RaisePropertyChanged("Referance_Source_SurrKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Remove_Scan_Sign {
            get {
                return this.Remove_Scan_SignField;
            }
            set {
                if ((this.Remove_Scan_SignField.Equals(value) != true)) {
                    this.Remove_Scan_SignField = value;
                    this.RaisePropertyChanged("Remove_Scan_Sign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Serial_Number {
            get {
                return this.Serial_NumberField;
            }
            set {
                if ((this.Serial_NumberField.Equals(value) != true)) {
                    this.Serial_NumberField = value;
                    this.RaisePropertyChanged("Serial_Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceFilePath {
            get {
                return this.SourceFilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceFilePathField, value) != true)) {
                    this.SourceFilePathField = value;
                    this.RaisePropertyChanged("SourceFilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source_Directory {
            get {
                return this.Source_DirectoryField;
            }
            set {
                if ((object.ReferenceEquals(this.Source_DirectoryField, value) != true)) {
                    this.Source_DirectoryField = value;
                    this.RaisePropertyChanged("Source_Directory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source_File_CheckSum {
            get {
                return this.Source_File_CheckSumField;
            }
            set {
                if ((object.ReferenceEquals(this.Source_File_CheckSumField, value) != true)) {
                    this.Source_File_CheckSumField = value;
                    this.RaisePropertyChanged("Source_File_CheckSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SurrKey {
            get {
                return this.SurrKeyField;
            }
            set {
                if ((this.SurrKeyField.Equals(value) != true)) {
                    this.SurrKeyField = value;
                    this.RaisePropertyChanged("SurrKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackChanges {
            get {
                return this.TrackChangesField;
            }
            set {
                if ((this.TrackChangesField.Equals(value) != true)) {
                    this.TrackChangesField = value;
                    this.RaisePropertyChanged("TrackChanges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type_of_User {
            get {
                return this.Type_of_UserField;
            }
            set {
                if ((object.ReferenceEquals(this.Type_of_UserField, value) != true)) {
                    this.Type_of_UserField = value;
                    this.RaisePropertyChanged("Type_of_User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User_Id {
            get {
                return this.User_IdField;
            }
            set {
                if ((object.ReferenceEquals(this.User_IdField, value) != true)) {
                    this.User_IdField = value;
                    this.RaisePropertyChanged("User_Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="File_Operations", Namespace="http://schemas.datacontract.org/2004/07/eDocsDN_Get_Directory_Info")]
    [System.SerializableAttribute()]
    public partial class File_Operations : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConvertToPdfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocumentPreCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestConsole.ServiceReference1.LockUnlockFile LockUnlockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestConsole.ServiceReference1.Print_Documents Print_DocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestConsole.ServiceReference1.Scan_Signature ScanSignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestConsole.ServiceReference1.Update_Users_Comments UpdateCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestConsole.ServiceReference1.Update_Document_Custom_Variables Update_PropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConvertToPdf {
            get {
                return this.ConvertToPdfField;
            }
            set {
                if ((this.ConvertToPdfField.Equals(value) != true)) {
                    this.ConvertToPdfField = value;
                    this.RaisePropertyChanged("ConvertToPdf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocumentPreCheck {
            get {
                return this.DocumentPreCheckField;
            }
            set {
                if ((this.DocumentPreCheckField.Equals(value) != true)) {
                    this.DocumentPreCheckField = value;
                    this.RaisePropertyChanged("DocumentPreCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestConsole.ServiceReference1.LockUnlockFile LockUnlock {
            get {
                return this.LockUnlockField;
            }
            set {
                if ((object.ReferenceEquals(this.LockUnlockField, value) != true)) {
                    this.LockUnlockField = value;
                    this.RaisePropertyChanged("LockUnlock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestConsole.ServiceReference1.Print_Documents Print_Documents {
            get {
                return this.Print_DocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.Print_DocumentsField, value) != true)) {
                    this.Print_DocumentsField = value;
                    this.RaisePropertyChanged("Print_Documents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestConsole.ServiceReference1.Scan_Signature ScanSignature {
            get {
                return this.ScanSignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.ScanSignatureField, value) != true)) {
                    this.ScanSignatureField = value;
                    this.RaisePropertyChanged("ScanSignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestConsole.ServiceReference1.Update_Users_Comments UpdateComments {
            get {
                return this.UpdateCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateCommentsField, value) != true)) {
                    this.UpdateCommentsField = value;
                    this.RaisePropertyChanged("UpdateComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestConsole.ServiceReference1.Update_Document_Custom_Variables Update_Properties {
            get {
                return this.Update_PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.Update_PropertiesField, value) != true)) {
                    this.Update_PropertiesField = value;
                    this.RaisePropertyChanged("Update_Properties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LockUnlockFile", Namespace="http://schemas.datacontract.org/2004/07/eDocsDN_Get_Directory_Info")]
    [System.SerializableAttribute()]
    public partial class LockUnlockFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestConsole.ServiceReference1.LockType Lock_TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockFile {
            get {
                return this.LockFileField;
            }
            set {
                if ((this.LockFileField.Equals(value) != true)) {
                    this.LockFileField = value;
                    this.RaisePropertyChanged("LockFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestConsole.ServiceReference1.LockType Lock_Type {
            get {
                return this.Lock_TypeField;
            }
            set {
                if ((this.Lock_TypeField.Equals(value) != true)) {
                    this.Lock_TypeField = value;
                    this.RaisePropertyChanged("Lock_Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Print_Documents", Namespace="http://schemas.datacontract.org/2004/07/eDocsDN_Get_Directory_Info")]
    [System.SerializableAttribute()]
    public partial class Print_Documents : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Clear_commentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Clear_comments {
            get {
                return this.Clear_commentsField;
            }
            set {
                if ((this.Clear_commentsField.Equals(value) != true)) {
                    this.Clear_commentsField = value;
                    this.RaisePropertyChanged("Clear_comments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Scan_Signature", Namespace="http://schemas.datacontract.org/2004/07/eDocsDN_Get_Directory_Info")]
    [System.SerializableAttribute()]
    public partial class Scan_Signature : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Remove_Scan_SignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> Users_Scan_SignField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Remove_Scan_Sign {
            get {
                return this.Remove_Scan_SignField;
            }
            set {
                if ((this.Remove_Scan_SignField.Equals(value) != true)) {
                    this.Remove_Scan_SignField = value;
                    this.RaisePropertyChanged("Remove_Scan_Sign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Users_Scan_Sign {
            get {
                return this.Users_Scan_SignField;
            }
            set {
                if ((object.ReferenceEquals(this.Users_Scan_SignField, value) != true)) {
                    this.Users_Scan_SignField = value;
                    this.RaisePropertyChanged("Users_Scan_Sign");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Update_Users_Comments", Namespace="http://schemas.datacontract.org/2004/07/eDocsDN_Get_Directory_Info")]
    [System.SerializableAttribute()]
    public partial class Update_Users_Comments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dtDateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dtDateTime {
            get {
                return this.dtDateTimeField;
            }
            set {
                if ((this.dtDateTimeField.Equals(value) != true)) {
                    this.dtDateTimeField = value;
                    this.RaisePropertyChanged("dtDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Update_Document_Custom_Variables", Namespace="http://schemas.datacontract.org/2004/07/eDocsDN_Get_Directory_Info")]
    [System.SerializableAttribute()]
    public partial class Update_Document_Custom_Variables : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestConsole.ServiceReference1.Documents_Process eDocument_ProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestConsole.ServiceReference1.Documents_Status eDocument_StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestConsole.ServiceReference1.Documents_Process eDocument_Process {
            get {
                return this.eDocument_ProcessField;
            }
            set {
                if ((this.eDocument_ProcessField.Equals(value) != true)) {
                    this.eDocument_ProcessField = value;
                    this.RaisePropertyChanged("eDocument_Process");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestConsole.ServiceReference1.Documents_Status eDocument_Status {
            get {
                return this.eDocument_StatusField;
            }
            set {
                if ((this.eDocument_StatusField.Equals(value) != true)) {
                    this.eDocument_StatusField = value;
                    this.RaisePropertyChanged("eDocument_Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LockType", Namespace="http://schemas.datacontract.org/2004/07/eDocsDN_Get_Directory_Info")]
    public enum LockType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadOnly = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Comments = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackedChanges = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Forms = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Documents_Process", Namespace="http://schemas.datacontract.org/2004/07/eDocsDN_Get_Directory_Info")]
    public enum Documents_Process : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Controller_Live = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Transfer_Document = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Controller_Publish = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Document_Recall = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TR4 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Document_Issuance = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Preview = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDC = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update_User_Comments = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Attach_Custom_Variables = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Attach_Custom_Variables_To_Template = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        obsolete_Document = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired_Document = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NA = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Repaire_Document = 14,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Documents_Status", Namespace="http://schemas.datacontract.org/2004/07/eDocsDN_Get_Directory_Info")]
    public enum Documents_Status : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Draft = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Draft_Approved = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Publish = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Issued = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Obsolete = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CopyFile", ReplyAction="http://tempuri.org/IService1/CopyFileResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        TestConsole.ServiceReference1.File_Data CopyFile(TestConsole.ServiceReference1.File_Data oFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CopyFile", ReplyAction="http://tempuri.org/IService1/CopyFileResponse")]
        System.Threading.Tasks.Task<TestConsole.ServiceReference1.File_Data> CopyFileAsync(TestConsole.ServiceReference1.File_Data oFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListOfFiles", ReplyAction="http://tempuri.org/IService1/ListOfFilesResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        TestConsole.ServiceReference1.File_Data[] ListOfFiles(TestConsole.ServiceReference1.File_Data[] lstFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListOfFiles", ReplyAction="http://tempuri.org/IService1/ListOfFilesResponse")]
        System.Threading.Tasks.Task<TestConsole.ServiceReference1.File_Data[]> ListOfFilesAsync(TestConsole.ServiceReference1.File_Data[] lstFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Delete_File", ReplyAction="http://tempuri.org/IService1/Delete_FileResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        bool Delete_File(TestConsole.ServiceReference1.File_Data oFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Delete_File", ReplyAction="http://tempuri.org/IService1/Delete_FileResponse")]
        System.Threading.Tasks.Task<bool> Delete_FileAsync(TestConsole.ServiceReference1.File_Data oFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Check_File_Exist", ReplyAction="http://tempuri.org/IService1/Check_File_ExistResponse")]
        bool Check_File_Exist(TestConsole.ServiceReference1.File_Data oFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Check_File_Exist", ReplyAction="http://tempuri.org/IService1/Check_File_ExistResponse")]
        System.Threading.Tasks.Task<bool> Check_File_ExistAsync(TestConsole.ServiceReference1.File_Data oFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_File_Information", ReplyAction="http://tempuri.org/IService1/Get_File_InformationResponse")]
        TestConsole.ServiceReference1.File_Data Get_File_Information(TestConsole.ServiceReference1.File_Data oFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_File_Information", ReplyAction="http://tempuri.org/IService1/Get_File_InformationResponse")]
        System.Threading.Tasks.Task<TestConsole.ServiceReference1.File_Data> Get_File_InformationAsync(TestConsole.ServiceReference1.File_Data oFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Check_File_Is_Locked", ReplyAction="http://tempuri.org/IService1/Check_File_Is_LockedResponse")]
        bool Check_File_Is_Locked(string szFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Check_File_Is_Locked", ReplyAction="http://tempuri.org/IService1/Check_File_Is_LockedResponse")]
        System.Threading.Tasks.Task<bool> Check_File_Is_LockedAsync(string szFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Check_File_Is_Locked_WithVersion", ReplyAction="http://tempuri.org/IService1/Check_File_Is_Locked_WithVersionResponse")]
        bool Check_File_Is_Locked_WithVersion(string szFileName, string szOfficeVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Check_File_Is_Locked_WithVersion", ReplyAction="http://tempuri.org/IService1/Check_File_Is_Locked_WithVersionResponse")]
        System.Threading.Tasks.Task<bool> Check_File_Is_Locked_WithVersionAsync(string szFileName, string szOfficeVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Pre_Check_File", ReplyAction="http://tempuri.org/IService1/Pre_Check_FileResponse")]
        bool Pre_Check_File(string szFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Pre_Check_File", ReplyAction="http://tempuri.org/IService1/Pre_Check_FileResponse")]
        System.Threading.Tasks.Task<bool> Pre_Check_FileAsync(string szFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Pre_Check_File_Blob", ReplyAction="http://tempuri.org/IService1/Pre_Check_File_BlobResponse")]
        bool Pre_Check_File_Blob(byte[] ArrFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Pre_Check_File_Blob", ReplyAction="http://tempuri.org/IService1/Pre_Check_File_BlobResponse")]
        System.Threading.Tasks.Task<bool> Pre_Check_File_BlobAsync(byte[] ArrFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Check_File", ReplyAction="http://tempuri.org/IService1/Check_FileResponse")]
        bool Check_File(TestConsole.ServiceReference1.File_Data oFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Check_File", ReplyAction="http://tempuri.org/IService1/Check_FileResponse")]
        System.Threading.Tasks.Task<bool> Check_FileAsync(TestConsole.ServiceReference1.File_Data oFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Documents", ReplyAction="http://tempuri.org/IService1/Get_DocumentsResponse")]
        TestConsole.ServiceReference1.File_Data[] Get_Documents(TestConsole.ServiceReference1.File_Data oFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Documents", ReplyAction="http://tempuri.org/IService1/Get_DocumentsResponse")]
        System.Threading.Tasks.Task<TestConsole.ServiceReference1.File_Data[]> Get_DocumentsAsync(TestConsole.ServiceReference1.File_Data oFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Server_Date_Time", ReplyAction="http://tempuri.org/IService1/Get_Server_Date_TimeResponse")]
        string Get_Server_Date_Time();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Server_Date_Time", ReplyAction="http://tempuri.org/IService1/Get_Server_Date_TimeResponse")]
        System.Threading.Tasks.Task<string> Get_Server_Date_TimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Server_Time", ReplyAction="http://tempuri.org/IService1/Get_Server_TimeResponse")]
        string Get_Server_Time();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Server_Time", ReplyAction="http://tempuri.org/IService1/Get_Server_TimeResponse")]
        System.Threading.Tasks.Task<string> Get_Server_TimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Document_CheckSum", ReplyAction="http://tempuri.org/IService1/Get_Document_CheckSumResponse")]
        string Get_Document_CheckSum(TestConsole.ServiceReference1.File_Data oFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Document_CheckSum", ReplyAction="http://tempuri.org/IService1/Get_Document_CheckSumResponse")]
        System.Threading.Tasks.Task<string> Get_Document_CheckSumAsync(TestConsole.ServiceReference1.File_Data oFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Convert_Document_To_PDF", ReplyAction="http://tempuri.org/IService1/Convert_Document_To_PDFResponse")]
        bool Convert_Document_To_PDF(TestConsole.ServiceReference1.File_Data oFileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Convert_Document_To_PDF", ReplyAction="http://tempuri.org/IService1/Convert_Document_To_PDFResponse")]
        System.Threading.Tasks.Task<bool> Convert_Document_To_PDFAsync(TestConsole.ServiceReference1.File_Data oFileData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : TestConsole.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<TestConsole.ServiceReference1.IService1>, TestConsole.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestConsole.ServiceReference1.File_Data CopyFile(TestConsole.ServiceReference1.File_Data oFileData) {
            return base.Channel.CopyFile(oFileData);
        }
        
        public System.Threading.Tasks.Task<TestConsole.ServiceReference1.File_Data> CopyFileAsync(TestConsole.ServiceReference1.File_Data oFileData) {
            return base.Channel.CopyFileAsync(oFileData);
        }
        
        public TestConsole.ServiceReference1.File_Data[] ListOfFiles(TestConsole.ServiceReference1.File_Data[] lstFileData) {
            return base.Channel.ListOfFiles(lstFileData);
        }
        
        public System.Threading.Tasks.Task<TestConsole.ServiceReference1.File_Data[]> ListOfFilesAsync(TestConsole.ServiceReference1.File_Data[] lstFileData) {
            return base.Channel.ListOfFilesAsync(lstFileData);
        }
        
        public bool Delete_File(TestConsole.ServiceReference1.File_Data oFileData) {
            return base.Channel.Delete_File(oFileData);
        }
        
        public System.Threading.Tasks.Task<bool> Delete_FileAsync(TestConsole.ServiceReference1.File_Data oFileData) {
            return base.Channel.Delete_FileAsync(oFileData);
        }
        
        public bool Check_File_Exist(TestConsole.ServiceReference1.File_Data oFileData) {
            return base.Channel.Check_File_Exist(oFileData);
        }
        
        public System.Threading.Tasks.Task<bool> Check_File_ExistAsync(TestConsole.ServiceReference1.File_Data oFileData) {
            return base.Channel.Check_File_ExistAsync(oFileData);
        }
        
        public TestConsole.ServiceReference1.File_Data Get_File_Information(TestConsole.ServiceReference1.File_Data oFileData) {
            return base.Channel.Get_File_Information(oFileData);
        }
        
        public System.Threading.Tasks.Task<TestConsole.ServiceReference1.File_Data> Get_File_InformationAsync(TestConsole.ServiceReference1.File_Data oFileData) {
            return base.Channel.Get_File_InformationAsync(oFileData);
        }
        
        public bool Check_File_Is_Locked(string szFileName) {
            return base.Channel.Check_File_Is_Locked(szFileName);
        }
        
        public System.Threading.Tasks.Task<bool> Check_File_Is_LockedAsync(string szFileName) {
            return base.Channel.Check_File_Is_LockedAsync(szFileName);
        }
        
        public bool Check_File_Is_Locked_WithVersion(string szFileName, string szOfficeVersion) {
            return base.Channel.Check_File_Is_Locked_WithVersion(szFileName, szOfficeVersion);
        }
        
        public System.Threading.Tasks.Task<bool> Check_File_Is_Locked_WithVersionAsync(string szFileName, string szOfficeVersion) {
            return base.Channel.Check_File_Is_Locked_WithVersionAsync(szFileName, szOfficeVersion);
        }
        
        public bool Pre_Check_File(string szFileName) {
            return base.Channel.Pre_Check_File(szFileName);
        }
        
        public System.Threading.Tasks.Task<bool> Pre_Check_FileAsync(string szFileName) {
            return base.Channel.Pre_Check_FileAsync(szFileName);
        }
        
        public bool Pre_Check_File_Blob(byte[] ArrFile) {
            return base.Channel.Pre_Check_File_Blob(ArrFile);
        }
        
        public System.Threading.Tasks.Task<bool> Pre_Check_File_BlobAsync(byte[] ArrFile) {
            return base.Channel.Pre_Check_File_BlobAsync(ArrFile);
        }
        
        public bool Check_File(TestConsole.ServiceReference1.File_Data oFileData) {
            return base.Channel.Check_File(oFileData);
        }
        
        public System.Threading.Tasks.Task<bool> Check_FileAsync(TestConsole.ServiceReference1.File_Data oFileData) {
            return base.Channel.Check_FileAsync(oFileData);
        }
        
        public TestConsole.ServiceReference1.File_Data[] Get_Documents(TestConsole.ServiceReference1.File_Data oFileData) {
            return base.Channel.Get_Documents(oFileData);
        }
        
        public System.Threading.Tasks.Task<TestConsole.ServiceReference1.File_Data[]> Get_DocumentsAsync(TestConsole.ServiceReference1.File_Data oFileData) {
            return base.Channel.Get_DocumentsAsync(oFileData);
        }
        
        public string Get_Server_Date_Time() {
            return base.Channel.Get_Server_Date_Time();
        }
        
        public System.Threading.Tasks.Task<string> Get_Server_Date_TimeAsync() {
            return base.Channel.Get_Server_Date_TimeAsync();
        }
        
        public string Get_Server_Time() {
            return base.Channel.Get_Server_Time();
        }
        
        public System.Threading.Tasks.Task<string> Get_Server_TimeAsync() {
            return base.Channel.Get_Server_TimeAsync();
        }
        
        public string Get_Document_CheckSum(TestConsole.ServiceReference1.File_Data oFileData) {
            return base.Channel.Get_Document_CheckSum(oFileData);
        }
        
        public System.Threading.Tasks.Task<string> Get_Document_CheckSumAsync(TestConsole.ServiceReference1.File_Data oFileData) {
            return base.Channel.Get_Document_CheckSumAsync(oFileData);
        }
        
        public bool Convert_Document_To_PDF(TestConsole.ServiceReference1.File_Data oFileData) {
            return base.Channel.Convert_Document_To_PDF(oFileData);
        }
        
        public System.Threading.Tasks.Task<bool> Convert_Document_To_PDFAsync(TestConsole.ServiceReference1.File_Data oFileData) {
            return base.Channel.Convert_Document_To_PDFAsync(oFileData);
        }
    }
}
